{"version":3,"sources":["store/action.ts","components/news-item.tsx","components/news-list.tsx","components/preloader.tsx","components/news-form.tsx","components/content.tsx","utils/const.ts","components/header.tsx","App.tsx","store/reducer.ts","index.tsx"],"names":["ActionTypes","connect","dispatch","removeNewsItem","id","type","payload","item","date","Date","created_at","itemDate","toLocaleDateString","day","month","year","itemTime","toLocaleTimeString","hour","minute","className","title","description","author","name","lastname","onClick","state","news","length","map","Preloader","setUserNews","newsItem","useState","newsForm","setNewsForm","handleInputChange","evt","target","value","handleInputChangeAuthor","onSubmit","preventDefault","now","toString","substr","placeholder","onChange","required","loading","loadNews","setLoading","status","useEffect","fetch","then","response","json","data","articles","Header","App","initialState","store","createStore","action","splice","findIndex","elem","concat","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.45fa5ae8.chunk.js","sourcesContent":["import {NewsItemType, ActionType} from '../types/types';\r\n\r\nexport const ActionTypes = {\r\n  SET_NEWS: `news/setNews`,\r\n  SET_LOADING: `news/setLoading`,\r\n  SET_USER_NEWS: `news/setUserNews`,\r\n  REMOVE_USER_NEWS: `news/removeUserNews`,\r\n};\r\n\r\nexport const setNews = (payload: any[]): ActionType => ({ \r\n  type: ActionTypes.SET_NEWS,\r\n  payload\r\n});\r\nexport const setLoading = (payload: boolean): ActionType => ({\r\n  type: ActionTypes.SET_LOADING,\r\n  payload\r\n});\r\nexport const setUserNews = (payload: NewsItemType): ActionType => ({\r\n  type: ActionTypes.SET_USER_NEWS,\r\n  payload\r\n});\r\nexport const removeNewsItem = (payload: number | string): ActionType => ({\r\n  type: ActionTypes.REMOVE_USER_NEWS,\r\n  payload\r\n});\r\n","import {NewsItemType} from '../types/types';\r\nimport {removeNewsItem} from '../store/action';\r\nimport {connect} from 'react-redux';\r\n\r\ntype NewsItemPropsType = {\r\n  item: NewsItemType,\r\n  removeNewsItem: (e: any) => void, \r\n}\r\n\r\nconst NewsItem = ({item, removeNewsItem}: NewsItemPropsType) => {\r\n\r\n  const date: Date = new Date(item.created_at);\r\n  const itemDate: string = date.toLocaleDateString(`ru`, {day: `numeric`, month: `long`, year: `numeric`});\r\n  const itemTime: string = date.toLocaleTimeString(`ru`, {hour: `numeric`, minute: `numeric`});\r\n\r\n  const removeItem = () => {\r\n    removeNewsItem(item.id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <hr />\r\n      <div className=\"hor-padding\">\r\n        <p>{`${itemDate} ${itemTime}`}</p>\r\n        <h3>{item.title}</h3>\r\n        <p>{item.description}</p>\r\n        <p>{item.author.name === `` &&  item.author.lastname === `` ? `Анонимный автор` : `Автор: ${item.author.name} ${item.author.lastname}`}</p>\r\n        <button className=\"form__btn form__btn--del-item\" onClick={removeItem}>Удалить</button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: (arg0: any) => void) => ({\r\n  removeNewsItem: (id: number | string) => dispatch(removeNewsItem(id)),\r\n});\r\n\r\nexport {NewsItem};\r\nexport default connect(null, mapDispatchToProps)(NewsItem);","import {connect} from 'react-redux';\r\nimport {StateType} from '../types/types';\r\nimport NewsItem from './news-item';\r\n\r\ninterface NewsListPropsType {\r\n  news: any[]\r\n};\r\n\r\nconst NewsList = ({news}: NewsListPropsType) => {\r\n\r\n  let quantityNewsText: string;\r\n\r\n  const setQuantityNewsText = (): string => {\r\n    if(news.length % 10 === 1 && news.length !== 11) {\r\n      return quantityNewsText = `новость`;\r\n    }\r\n    if(news.length % 10 < 5 && news.length % 10 !== 0) {\r\n      if(news.length > 10 && news.length < 15) {\r\n        return quantityNewsText = `новостей`;\r\n      } else {\r\n        return quantityNewsText = `новости`;\r\n      }\r\n    }\r\n    return quantityNewsText = `новостей`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"page__news-wrapper\">\r\n      {news.length === 0 ?\r\n        <h2 className=\"hor-padding\">Новостей нет</h2> :\r\n        <h2 className=\"hor-padding\">{`${news.length}`} {setQuantityNewsText()}</h2>  \r\n      }\r\n      <div className=\"page__news\">\r\n          {news.map((item) =>\r\n              <NewsItem item={item} key={item.id} />\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: StateType) => ({\r\n  news: state.news,\r\n});\r\n\r\nexport {NewsList};\r\nexport default connect(mapStateToProps, null)(NewsList);","import React from 'react';\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <div className=\"page__loading-spinner\"></div>\r\n  );\r\n};\r\n\r\nexport default Preloader;","import React, { useState } from \"react\";\r\nimport {setUserNews} from '../store/action';\r\nimport {connect} from 'react-redux';\r\n\r\ninterface NewsFormPropsType {\r\n  setUserNews: (e: any) => void, \r\n}\r\n\r\nconst NewsForm = ({setUserNews}: NewsFormPropsType) => {\r\n\r\n  const [newsForm, setNewsForm] = useState({\r\n    id: null,\r\n    title: ``,\r\n    description: ``,\r\n    created_at: null,\r\n    author: {\r\n      name: ``,\r\n      lastname: ``,\r\n    }\r\n  });\r\n\r\n  const handleSubmit = (evt: { preventDefault: () => void; }) => {\r\n    evt.preventDefault();\r\n\r\n    setUserNews({\r\n      ...newsForm,\r\n      id: Date.now().toString(36).substr(2, 7),\r\n      created_at: new Date(),\r\n    });\r\n    \r\n    setNewsForm({\r\n      id: null,\r\n      title: ``,\r\n      description: ``,\r\n      created_at: null,\r\n      author: {\r\n        name: ``,\r\n        lastname: ``,\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleInputChange = (evt: { target: { name: string; value: string; }; }) => {\r\n    const {name, value} = evt.target;\r\n    setNewsForm({...newsForm, [name]: value});\r\n  };\r\n\r\n  const handleInputChangeAuthor = (evt: { target: { name: string; value: string; }; }) => {\r\n    const {name, value} = evt.target;\r\n    setNewsForm({\r\n      ...newsForm, \r\n      author:{\r\n        ...newsForm.author,\r\n        [name]: value\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"page__form form hor-padding\">\r\n      <h2>Добавить новость</h2>\r\n      <label>\r\n        <p className=\"form__input-text\">Новость</p>\r\n        <input className=\"form__input\" type=\"text\" placeholder=\"Заголовок\" name=\"title\" value={newsForm.title} onChange={handleInputChange} required/>\r\n      </label>\r\n      <textarea placeholder=\"Текст новости\" name=\"description\" value={newsForm.description} onChange={handleInputChange} required></textarea>\r\n      <div>\r\n        <label>\r\n          <p className=\"form__input-text\">Автор</p>\r\n          <input className=\"form__input\" type=\"text\" placeholder=\"Имя\" name=\"name\" value={newsForm.author.name} onChange={handleInputChangeAuthor} />\r\n        </label>\r\n        <label>\r\n          <input className=\"form__input\" type=\"text\" placeholder=\"Фамилия\" name=\"lastname\" value={newsForm.author.lastname} onChange={handleInputChangeAuthor} />\r\n        </label>\r\n      </div>\r\n      <button className=\"form__btn\" type=\"submit\">Добавить новость</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: (arg0: any) => void) => ({\r\n  setUserNews: (newsItem: any) => dispatch(setUserNews(newsItem)),\r\n});\r\n\r\nexport {NewsForm};\r\nexport default connect(null, mapDispatchToProps)(NewsForm);","import React, {useEffect} from 'react';\r\nimport NewsList from './news-list';\r\nimport Preloader from './preloader';\r\nimport {API_URL} from '../utils/const';\r\nimport {setNews, setLoading} from '../store/action';\r\nimport {connect} from 'react-redux';\r\nimport {StateType} from '../types/types';\r\nimport NewsForm from './news-form';\r\n\r\n interface ContentPropsType {\r\n  loadNews: (e: any[]) => void, \r\n  loading: boolean, \r\n  setLoading: (e: boolean) => void,\r\n}\r\n\r\nconst Content = ({loadNews, loading, setLoading}: ContentPropsType) => {\r\n\r\n  useEffect(() => {\r\n    fetch(API_URL)\r\n    .then(response => response.json())\r\n    .then(response => {\r\n      response.data.articles && loadNews(response.data.articles);\r\n        setLoading(false);\r\n    });\r\n});\r\n\r\n  return (\r\n    < div className=\"page__content\">\r\n      {loading ?\r\n        <Preloader /> :\r\n        <div className=\"page__wrapper\">\r\n          <NewsList />\r\n          <NewsForm />\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: StateType) => ({\r\n  loading: state.loading,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: (arg0: any) => void) => ({\r\n  loadNews: (news: any[]) => dispatch(setNews(news)),\r\n  setLoading: (status: boolean) => dispatch(setLoading(status)),\r\n});\r\n\r\nexport {Content};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Content);","export const API_URL = `https://test-api-app-for-react.herokuapp.com/api/v1/news`;","import React from 'react';\r\n\r\nconst Header = () => {\r\nreturn (\r\n  <>\r\n    <header className=\"page__header header\">\r\n      <h1 className=\"header__title\">Новости</h1>\r\n    </header>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\nimport Content from './components/content';\nimport Header from './components/header';\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Content />\n    </>\n  );\n}\n\nexport default App;\n","import {ActionTypes} from './action';\r\nimport {StateType, ActionType} from '../types/types'\r\n\r\nconst initialState: StateType = {\r\n  news: [],\r\n  loading: true,\r\n};\r\n\r\nconst reducer = (state: StateType = initialState, action: ActionType): StateType => {\r\n  switch (action.type) {\r\n    case ActionTypes.SET_NEWS:\r\n      return {\r\n        ...state,\r\n        news: action.payload\r\n      };\r\n    case ActionTypes.SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.payload,\r\n      };\r\n    case ActionTypes.SET_USER_NEWS:\r\n      return {\r\n        ...state,\r\n        news: [\r\n          action.payload,\r\n          ...state.news,\r\n        ],\r\n      };\r\n    case ActionTypes.REMOVE_USER_NEWS:\r\n      return {\r\n        ...state,\r\n        news: state.news.splice(0, state.news.findIndex(elem => elem.id === action.payload))\r\n              .concat(state.news.splice(state.news.findIndex((elem) => (elem.id === action.payload)) + 1, state.news.length - 1)),\r\n      };\r\n    default:\r\n      return {...state};\r\n  }\r\n};\r\n\r\nexport {reducer};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nimport {Provider} from 'react-redux';\nimport {reducer} from './store/reducer';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport {createStore} from 'redux';\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}